{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Project\\\\ShopBanHoa\\\\frontend\\\\src\\\\components\\\\Contact\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect } from \"react\";\nimport \"./Contact.css\";\nimport { useState } from \"react\";\nimport { newMessage, clearErrors } from \"../../actions/messageActions\";\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nexport default function Contact({\n  history\n}) {\n  _s();\n\n  const [messages, setMessage] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    mess: \"\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    mess\n  } = messages;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useSelector(state => state.newMessage);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Message sent successfully\");\n      history.push('/');\n    }\n  }, [dispatch, alert,, error, success, history]);\n\n  const HandleSubmit = e => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.set(\"name\", name);\n      formData.set(\"email\", email);\n      formData.set(\"phone\", phone);\n      formData.set(\"message\", mess);\n      dispatch(newMessage(formData));\n    } catch (err) {\n      alert.error(err);\n    }\n\n    history.push('/');\n  };\n\n  const onChangeMessage = e => {\n    setMessage({ ...messages,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Contact \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter name\",\n      value: name,\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"example@gmail.com\",\n      value: email,\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"phone\",\n      name: \"phone\",\n      placeholder: \"+81\",\n      value: phone,\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      value: mess,\n      name: \"mess\",\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"Type here....\",\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: HandleSubmit,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"+hRW300cYKwOTgCkuZ4uDrntVIA=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/Project/ShopBanHoa/frontend/src/components/Contact/Contact.js"],"names":["React","useCallback","useEffect","useState","newMessage","clearErrors","useAlert","useDispatch","useSelector","Contact","history","messages","setMessage","name","email","phone","mess","alert","dispatch","error","success","state","push","HandleSubmit","e","preventDefault","formData","FormData","set","err","onChangeMessage","target","value"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\r\nimport \"./Contact.css\";\r\nimport { useState } from \"react\";\r\n\r\nimport { newMessage,clearErrors } from \"../../actions/messageActions\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nexport default function Contact( { history}) {\r\n  const [messages, setMessage ] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    mess: \"\",\r\n  });\r\n\r\n  const { name , email , phone , mess} = messages\r\n\r\n    const alert = useAlert()\r\n    const dispatch= useDispatch()\r\n\r\n  const { error , success} = useSelector((state) => state.newMessage)\r\n\r\n  useEffect(()=>{\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if(success) {\r\n      alert.success(\"Message sent successfully\")\r\n        history.push('/')\r\n    }\r\n  }, [dispatch, alert, , error, success,history])\r\n\r\n  const HandleSubmit = (e) => {\r\n\r\n    e.preventDefault();\r\n    try{\r\n    const formData = new FormData();\r\n    formData.set(\"name\", name);\r\n    formData.set(\"email\", email);\r\n    formData.set(\"phone\", phone);\r\n    formData.set(\"message\", mess);\r\n\r\n    dispatch(newMessage(formData));\r\n   \r\n    }catch(err){\r\n\r\n      alert.error(err)\r\n    }\r\n    history.push('/')\r\n    \r\n  };\r\n\r\nconst onChangeMessage = (e)=>{\r\n  setMessage({...messages, [e.target.name]: e.target.value})\r\n}\r\n\r\n  return (\r\n    <form className=\"form-input\" >\r\n      <h1>\r\n        Contact <span>Here</span>\r\n      </h1>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Enter name\" value={name} onChange={onChangeMessage}></input>\r\n      <input type=\"email\" name=\"email\" placeholder=\"example@gmail.com\" value={email} onChange={onChangeMessage}></input>\r\n      <input type=\"phone\" name=\"phone\" placeholder=\"+81\" value={phone} onChange={onChangeMessage}></input>\r\n      <textarea\r\n        type=\"text\"\r\n        value={mess}\r\n        name=\"mess\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        placeholder=\"Type here....\"\r\n        onChange={onChangeMessage}\r\n      ></textarea>\r\n      <button type=\"submit\" onClick={HandleSubmit}>Send</button>\r\n    </form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}