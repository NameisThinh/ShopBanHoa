{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, DELETE_PRODUCT_REQUEST, DELETE_PRODUCT_SUCCESS, DELETE_PRODUCT_FAIL, UPDATE_PRODUCT_REQUEST, UPDATE_PRODUCT_SUCCESS, UPDATE_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, ASC_PRODUCT_REQUEST, ASC_PRODUCT_SUCCESS, ASC_PRODUCT_FAIL, DESC_PRODUCT_REQUEST, DESC_PRODUCT_SUCCESS, DESC_PRODUCT_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, DELETE_REVIEW_REQUEST, DELETE_REVIEW_SUCCESS, DELETE_REVIEW_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\nexport const getProducts = (keyword = \"\") => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}`;\n    const {\n      data\n    } = await axios.get(link);\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/admin/product/new`, productData, config);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete product (Admin)\n\nexport const deleteProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/admin/product/${id}`);\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Update Product (ADMIN)\n\nexport const updateProduct = (id, productData) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/admin/product/${id}`, productData, config);\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/products`);\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get product reviews\n\nexport const getProductReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/reviews?id=${id}`);\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Delete product review\n\nexport const deleteReview = (id, productId) => async dispatch => {\n  try {\n    dispatch({\n      type: DELETE_REVIEW_REQUEST\n    });\n    const {\n      data\n    } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`);\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // San pham tăng dần\n\nexport const ascendingProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ASC_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/sort/asc`);\n    dispatch({\n      type: ASC_PRODUCT_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: ASC_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductsDesc = () => async dispatch => {\n  try {\n    dispatch({\n      type: DESC_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/sort/desc`);\n    dispatch({\n      type: DESC_PRODUCT_SUCCESS,\n      payload: data.products\n    });\n  } catch (error) {\n    dispatch({\n      type: DESC_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Clear Errors\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"sources":["D:/Project/ShopBanHoa/frontend/src/actions/productActions.js"],"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","ASC_PRODUCT_REQUEST","ASC_PRODUCT_SUCCESS","ASC_PRODUCT_FAIL","DESC_PRODUCT_REQUEST","DESC_PRODUCT_SUCCESS","DESC_PRODUCT_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_FAIL","CLEAR_ERRORS","getProducts","keyword","dispatch","type","link","data","get","payload","error","response","message","newProduct","productData","config","headers","post","deleteProduct","id","delete","success","updateProduct","put","getProductDetails","product","newReview","reviewData","getAdminProducts","products","getProductReviews","reviews","deleteReview","productId","ascendingProduct","getProductsDesc","clearErrors"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  ALL_PRODUCTS_REQUEST,\n  ALL_PRODUCTS_SUCCESS,\n  ALL_PRODUCTS_FAIL,\n  ADMIN_PRODUCTS_REQUEST,\n  ADMIN_PRODUCTS_SUCCESS,\n  ADMIN_PRODUCTS_FAIL,\n  NEW_PRODUCT_REQUEST,\n  NEW_PRODUCT_SUCCESS,\n  NEW_PRODUCT_FAIL,\n  DELETE_PRODUCT_REQUEST,\n  DELETE_PRODUCT_SUCCESS,\n  DELETE_PRODUCT_FAIL,\n  UPDATE_PRODUCT_REQUEST,\n  UPDATE_PRODUCT_SUCCESS,\n  UPDATE_PRODUCT_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n\n  ASC_PRODUCT_REQUEST,\nASC_PRODUCT_SUCCESS,\nASC_PRODUCT_FAIL,\n\nDESC_PRODUCT_REQUEST,DESC_PRODUCT_SUCCESS,DESC_PRODUCT_FAIL,\n\n  NEW_REVIEW_REQUEST,\n  NEW_REVIEW_SUCCESS,\n  NEW_REVIEW_FAIL,\n  GET_REVIEWS_REQUEST,\n  GET_REVIEWS_SUCCESS,\n  GET_REVIEWS_FAIL,\n  DELETE_REVIEW_REQUEST,\n  DELETE_REVIEW_SUCCESS,\n  DELETE_REVIEW_FAIL,\n  CLEAR_ERRORS,\n} from \"../constants/productConstants\";\n\nexport const getProducts =\n  (keyword = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: ALL_PRODUCTS_REQUEST });\n\n      let link = `/api/v1/products?keyword=${keyword}`;\n\n      const { data } = await axios.get(link);\n\n      dispatch({\n        type: ALL_PRODUCTS_SUCCESS,\n        payload: data,\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  };\n\nexport const newProduct = (productData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_PRODUCT_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/v1/admin/product/new`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n    const { data } = await axios.delete(`/api/v1/admin/product/${id}`);\n\n    dispatch({\n      type: DELETE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n  try {\n    dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.put(\n      `/api/v1/admin/product/${id}`,\n      productData,\n      config\n    );\n\n    dispatch({\n      type: UPDATE_PRODUCT_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/product/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const newReview = (reviewData) => async (dispatch) => {\n  try {\n    dispatch({ type: NEW_REVIEW_REQUEST });\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const { data } = await axios.put(`/api/v1/review`, reviewData, config);\n\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\nexport const getAdminProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: ADMIN_PRODUCTS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/admin/products`);\n\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: GET_REVIEWS_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/reviews?id=${id}`);\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews,\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n  try {\n    dispatch({ type: DELETE_REVIEW_REQUEST });\n\n    const { data } = await axios.delete(\n      `/api/v1/reviews?id=${id}&productId=${productId}`\n    );\n\n    dispatch({\n      type: DELETE_REVIEW_SUCCESS,\n      payload: data.success,\n    });\n  } catch (error) {\n  \n\n    dispatch({\n      type: DELETE_REVIEW_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n// San pham tăng dần\nexport const ascendingProduct = ()=> async (dispatch)=>{\n  try{\n    dispatch({ type: ASC_PRODUCT_REQUEST });\n    const { data } = await axios.get(`/api/v1/product/sort/asc`)\n    dispatch({\n      type: ASC_PRODUCT_SUCCESS,\n      payload: data.products,\n    });\n    \n  }catch(error){\n\n    dispatch({\n      type: ASC_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n}\nexport const getProductsDesc = () => async (dispatch) => {\n  try {\n    dispatch({ type: DESC_PRODUCT_REQUEST });\n\n    const { data } = await axios.get(`/api/v1/product/sort/desc`);\n\n    dispatch({\n      type: DESC_PRODUCT_SUCCESS,\n      payload: data.products,\n    });\n  } catch (error) {\n    dispatch({\n      type: DESC_PRODUCT_FAIL,\n      payload: error.response.data.message,\n    });\n  }\n};\n\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_ERRORS,\n  });\n};\n"]},"metadata":{},"sourceType":"module"}