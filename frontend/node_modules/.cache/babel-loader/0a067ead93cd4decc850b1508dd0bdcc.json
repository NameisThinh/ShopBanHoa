{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Project\\\\ShopBanHoa\\\\frontend\\\\src\\\\components\\\\Contact\\\\Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Contact.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useAlert } from \"react-alert\";\nimport { useHistory } from \"react-router-dom\";\nimport { clearErrors, newMessage } from \"../../actions/messageActions\";\nexport default function Contact() {\n  _s();\n\n  const [messages, setMessages] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    mess: \"\"\n  });\n  const {\n    name,\n    email,\n    phone,\n    mess\n  } = messages;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    error,\n    success\n  } = useSelector(state => state.newMessage);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success(\"Message sent successfully\");\n      setMessages({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        mess: \"\"\n      });\n      history.push('/');\n    }\n  }, [dispatch, alert, error, success]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    try {\n      const formData = new FormData();\n      formData.set(\"name\", name);\n      formData.set(\"email\", email);\n      formData.set(\"phone\", phone);\n      formData.set(\"message\", mess);\n      dispatch(newMessage(formData));\n    } catch (err) {\n      alert.error(err);\n    }\n  };\n\n  const onChangeMessage = e => {\n    setMessages({ ...messages,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form-input\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Contact \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Enter name\",\n      value: name,\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"example@gmail.com\",\n      value: email,\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"phone\",\n      name: \"phone\",\n      placeholder: \"+81\",\n      value: phone,\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      type: \"text\",\n      value: mess,\n      name: \"mess\",\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"Type here....\",\n      onChange: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Contact, \"vRTKzMyKJlRVudrHno2Kamggmso=\", false, function () {\n  return [useAlert, useDispatch, useHistory, useSelector];\n});\n\n_c = Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["D:/Project/ShopBanHoa/frontend/src/components/Contact/Contact.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useAlert","useHistory","clearErrors","newMessage","Contact","messages","setMessages","name","email","phone","mess","alert","dispatch","history","error","success","state","push","handleSubmit","e","preventDefault","formData","FormData","set","err","onChangeMessage","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Contact.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { clearErrors, newMessage } from \"../../actions/messageActions\";\r\n\r\nexport default function Contact() {\r\n  const [messages, setMessages] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    mess: \"\",\r\n  });\r\n\r\n  const { name, email, phone, mess } = messages;\r\n\r\n  const alert = useAlert();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const { error, success } = useSelector((state) => state.newMessage);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      alert.error(error);\r\n      dispatch(clearErrors());\r\n    }\r\n    if (success) {\r\n      alert.success(\"Message sent successfully\");\r\n      setMessages({\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        mess: \"\",\r\n      });\r\n      history.push('/')\r\n    }\r\n  }, [dispatch, alert, error, success]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.set(\"name\", name);\r\n      formData.set(\"email\", email);\r\n      formData.set(\"phone\", phone);\r\n      formData.set(\"message\", mess);\r\n\r\n      dispatch(newMessage(formData));\r\n    } catch (err) {\r\n      alert.error(err);\r\n    }\r\n  };\r\n\r\n  const onChangeMessage = (e) => {\r\n    setMessages({ ...messages, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <form className=\"form-input\" onSubmit={handleSubmit}>\r\n      <h1>\r\n        Contact <span>Here</span>\r\n      </h1>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Enter name\"\r\n        value={name}\r\n        onChange={onChangeMessage}\r\n      ></input>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"example@gmail.com\"\r\n        value={email}\r\n        onChange={onChangeMessage}\r\n      ></input>\r\n      <input\r\n        type=\"phone\"\r\n        name=\"phone\"\r\n        placeholder=\"+81\"\r\n        value={phone}\r\n        onChange={onChangeMessage}\r\n      ></input>\r\n      <textarea\r\n        type=\"text\"\r\n        value={mess}\r\n        name=\"mess\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        placeholder=\"Type here....\"\r\n        onChange={onChangeMessage}\r\n      ></textarea>\r\n      <button type=\"submit\">Send</button>\r\n    </form>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}