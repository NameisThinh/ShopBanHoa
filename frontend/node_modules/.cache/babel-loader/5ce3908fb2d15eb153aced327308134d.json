{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ALL_ORDERS_REQUEST, ALL_ORDERS_SUCCESS, ALL_ORDERS_FAIL, UPDATE_ORDER_REQUEST, UPDATE_ORDER_SUCCESS, UPDATE_ORDER_RESET, UPDATE_ORDER_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PREW_DETAILS_REQUEST, ORDER_PREW_DETAILS_SUCCESS, ORDER_PREW_DETAILS_FAIL, CLEAR_ERRORS } from '../constants/orderConstants';\nexport const newOrderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case CREATE_ORDER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case CREATE_ORDER_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload\n      };\n\n    case CREATE_ORDER_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const myOrdersReducer = (state = {\n  orders: []\n}, action) => {\n  switch (action.type) {\n    case MY_ORDERS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case MY_ORDERS_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload\n      };\n\n    case MY_ORDERS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const orderDetailsReducer = (state = {\n  order: {}\n}, action) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload\n      };\n\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const orderPrewDetailsReducer = (state = {\n  order: {}\n}, action) => {\n  switch (action.type) {\n    case ORDER_PREW_DETAILS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case ORDER_PREW_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload\n      };\n\n    case ORDER_PREW_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const allOrdersReducer = (state = {\n  orders: []\n}, action) => {\n  switch (action.type) {\n    case ALL_ORDERS_REQUEST:\n      return {\n        loading: true\n      };\n\n    case ALL_ORDERS_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload.orders,\n        totalAmount: action.payload.totalAmount\n      };\n\n    case ALL_ORDERS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};\nexport const orderReducer = (state = {}, action) => {\n  switch (action.type) {\n    case UPDATE_ORDER_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case UPDATE_ORDER_SUCCESS:\n      return { ...state,\n        loading: false,\n        isUpdated: action.payload\n      };\n\n    case UPDATE_ORDER_FAIL:\n      return { ...state,\n        error: action.payload\n      };\n\n    case UPDATE_ORDER_RESET:\n      return { ...state,\n        isUpdated: false\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        error: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/Project/ShopBanHoa/frontend/src/reducers/orderReducers.js"],"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PREW_DETAILS_REQUEST","ORDER_PREW_DETAILS_SUCCESS","ORDER_PREW_DETAILS_FAIL","CLEAR_ERRORS","newOrderReducer","state","action","type","loading","order","payload","error","myOrdersReducer","orders","orderDetailsReducer","orderPrewDetailsReducer","allOrdersReducer","totalAmount","orderReducer","isUpdated"],"mappings":"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","sourcesContent":["import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PREW_DETAILS_REQUEST,\n    ORDER_PREW_DETAILS_SUCCESS,\n    ORDER_PREW_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstants'\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDER_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\nexport const orderPrewDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDER_PREW_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PREW_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_PREW_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case ALL_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const orderReducer = (state = {}, action) => {\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        \n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_ORDER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        \n\n        case UPDATE_ORDER_FAIL:\n        \n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case UPDATE_ORDER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        \n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}